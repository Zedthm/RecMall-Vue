<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recMall.mall.mapper.BookOrdersMapper">
    
    <resultMap type="BookOrders" id="BookOrdersResult">
        <result property="id"    column="id"    />
        <result property="orderNumber"    column="order_number"    />
        <result property="bookId"    column="book_id"    />
        <result property="num"    column="num"    />
        <result property="userId"    column="user_id"    />
        <result property="status"    column="status"    />
        <result property="time"    column="time"    />
    </resultMap>

    <sql id="selectBookOrdersVo">
        select id, order_number, book_id, num, user_id, status, time from book_orders
    </sql>

    <select id="selectBookOrdersList" parameterType="BookOrders" resultMap="BookOrdersResult">
        <include refid="selectBookOrdersVo"/>
        <where>  
            <if test="orderNumber != null  and orderNumber != ''"> and order_number = #{orderNumber}</if>
            <if test="bookId != null  and bookId != ''"> and book_id = #{bookId}</if>
            <if test="num != null "> and num = #{num}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="time != null  and time != ''"> and time = #{time}</if>
        </where>
    </select>
    
    <select id="selectBookOrdersById" parameterType="Long" resultMap="BookOrdersResult">
        <include refid="selectBookOrdersVo"/>
        where id = #{id}
    </select>

    <insert id="insertBookOrders" parameterType="BookOrders" useGeneratedKeys="true" keyProperty="id">
        insert into book_orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderNumber != null">order_number,</if>
            <if test="bookId != null and bookId != ''">book_id,</if>
            <if test="num != null">num,</if>
            <if test="userId != null">user_id,</if>
            <if test="status != null">status,</if>
            <if test="time != null">time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderNumber != null">#{orderNumber},</if>
            <if test="bookId != null and bookId != ''">#{bookId},</if>
            <if test="num != null">#{num},</if>
            <if test="userId != null">#{userId},</if>
            <if test="status != null">#{status},</if>
            <if test="time != null">#{time},</if>
         </trim>
    </insert>

    <update id="updateBookOrders" parameterType="BookOrders">
        update book_orders
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderNumber != null">order_number = #{orderNumber},</if>
            <if test="bookId != null and bookId != ''">book_id = #{bookId},</if>
            <if test="num != null">num = #{num},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="time != null">time = #{time},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBookOrdersById" parameterType="Long">
        delete from book_orders where id = #{id}
    </delete>

    <delete id="deleteBookOrdersByIds" parameterType="String">
        delete from book_orders where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>